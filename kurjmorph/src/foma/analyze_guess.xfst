! This script puts analyzer and the guesser on the same binary FST
! file, so that one can fall back to guesser in case analysis fails.
!
! Released under the terms of the MIT License
! Copyright (c) 2011-2015 Çağrı Çöltekin <cagri@coltekin.net>
! 
! Permission is hereby granted, free of charge, to any person obtaining a
! copy of this software and associated documentation files (the "Software"),
! to deal in the Software without restriction, including without limitation
! the rights to use, copy, modify, merge, publish, distribute, sublicense,
! and/or sell copies of the Software, and to permit persons to whom the
! Software is furnished to do so, subject to the following conditions:
! 
! The above copyright notice and this permission notice shall be included in
! all copies or substantial portions of the Software.
! 
! THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
! IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
! FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
! AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
! LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
! FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
! DEALINGS IN THE SOFTWARE.
!

!
! TODO: choose one of these options from options.h.

!
! First option is to rely on 'flookup's -a option
! Both analyzer and guesser will be written to the same binary file.
! To use this you should run something like:
!   echo Fomayla | flookup -a analyze_guess.fst
!
regex @"trmorph.fst";
regex @"guess.fst";

!
! Somewhat slower, but the following combines analyzer and guesser
! into a single FST. Comment out the above and remove the comment
! from the following to enable it. It should be used like
! any other single-automaton binary file.
!
!regex @"trmorph.fst" .P. @"guess.fst";

save stack analyze_guess.fst
